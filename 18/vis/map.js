// create an array with nodes
var nodes = new vis.DataSet([
  { id: 1, label: "f", shape: "circle", color: "green" },
  { id: 2, label: "c", shape: "circle", color: "green" },
  { id: 3, label: "l", shape: "circle", color: "green" },
  { id: 4, label: "r", shape: "circle", color: "green" },
  { id: 5, label: "o", shape: "circle", color: "green" },
  { id: 6, label: "H", shape: "circle", color: "red" },
  { id: 7, label: "q", shape: "circle", color: "green" },
  { id: 8, label: "K", shape: "circle", color: "red" },
  { id: 9, label: "N", shape: "circle", color: "red" },
  { id: 10, label: "S", shape: "circle", color: "red" },
  { id: 11, label: "n", shape: "circle", color: "green" },
  { id: 12, label: "s", shape: "circle", color: "green" },
  { id: 13, label: "v", shape: "circle", color: "green" },
  { id: 14, label: "M", shape: "circle", color: "red" },
  { id: 15, label: "E", shape: "circle", color: "red" },
  { id: 16, label: "w", shape: "circle", color: "green" },
  { id: 17, label: "Z", shape: "circle", color: "red" },
  { id: 18, label: "J", shape: "circle", color: "red" },
  { id: 19, label: "a", shape: "circle", color: "green" },
  { id: 20, label: "X", shape: "circle", color: "red" },
  { id: 21, label: "D", shape: "circle", color: "red" },
  { id: 22, label: "I", shape: "circle", color: "red" },
  { id: 23, label: "A", shape: "circle", color: "red" },
  { id: 24, label: "t", shape: "circle", color: "green" },
  { id: 25, label: "b", shape: "circle", color: "green" },
  { id: 26, label: "i", shape: "circle", color: "green" },
  { id: 27, label: "G", shape: "circle", color: "red" },
  { id: 28, label: "e", shape: "circle", color: "green" },
  { id: 29, label: "T", shape: "circle", color: "red" },
  { id: 30, label: "y", shape: "circle", color: "green" },
  { id: 31, label: "@", shape: "circle", color: "black" },
  { id: 32, label: "U", shape: "circle", color: "red" },
  { id: 33, label: "u", shape: "circle", color: "green" },
  { id: 34, label: "B", shape: "circle", color: "red" },
  { id: 35, label: "x", shape: "circle", color: "green" },
  { id: 36, label: "z", shape: "circle", color: "green" },
  { id: 37, label: "V", shape: "circle", color: "red" },
  { id: 38, label: "d", shape: "circle", color: "green" },
  { id: 39, label: "j", shape: "circle", color: "green" },
  { id: 40, label: "g", shape: "circle", color: "green" },
  { id: 41, label: "Q", shape: "circle", color: "red" },
  { id: 42, label: "L", shape: "circle", color: "red" },
  { id: 43, label: "P", shape: "circle", color: "red" },
  { id: 44, label: "Y", shape: "circle", color: "red" },
  { id: 45, label: "k", shape: "circle", color: "green" },
  { id: 46, label: "O", shape: "circle", color: "red" },
  { id: 47, label: "p", shape: "circle", color: "green" },
  { id: 48, label: "F", shape: "circle", color: "red" },
  { id: 49, label: "W", shape: "circle", color: "red" },
  { id: 50, label: "m", shape: "circle", color: "green" },
  { id: 51, label: "h", shape: "circle", color: "green" },
  { id: 52, label: "R", shape: "circle", color: "red" },
  { id: 53, label: "C", shape: "circle", color: "red" },
]);
// create an array with edges
var edges = new vis.DataSet([
  { from: 1, to: 2, label: "38" },
  { from: 1, to: 6, label: "269" },
  { from: 1, to: 12, label: "38" },
  { from: 1, to: 18, label: "205" },
  { from: 1, to: 25, label: "164" },
  { from: 1, to: 31, label: "184" },
  { from: 1, to: 32, label: "239" },
  { from: 1, to: 33, label: "234" },
  { from: 1, to: 34, label: "221" },
  { from: 1, to: 39, label: "196" },
  { from: 1, to: 48, label: "375" },
  { from: 1, to: 49, label: "253" },
  { from: 2, to: 6, label: "239" },
  { from: 2, to: 18, label: "175" },
  { from: 2, to: 25, label: "134" },
  { from: 2, to: 31, label: "154" },
  { from: 2, to: 32, label: "209" },
  { from: 2, to: 33, label: "204" },
  { from: 2, to: 34, label: "191" },
  { from: 2, to: 39, label: "166" },
  { from: 2, to: 48, label: "345" },
  { from: 2, to: 49, label: "223" },
  { from: 3, to: 4, label: "60" },
  { from: 3, to: 5, label: "10" },
  { from: 4, to: 5, label: "66" },
  { from: 4, to: 14, label: "39" },
  { from: 5, to: 6, label: "13" },
  { from: 6, to: 18, label: "74" },
  { from: 6, to: 25, label: "121" },
  { from: 6, to: 31, label: "91" },
  { from: 6, to: 32, label: "148" },
  { from: 6, to: 33, label: "139" },
  { from: 6, to: 34, label: "126" },
  { from: 6, to: 39, label: "101" },
  { from: 6, to: 48, label: "280" },
  { from: 6, to: 49, label: "162" },
  { from: 7, to: 11, label: "22" },
  { from: 7, to: 12, label: "32" },
  { from: 8, to: 9, label: "50" },
  { from: 8, to: 13, label: "23" },
  { from: 9, to: 10, label: "16" },
  { from: 9, to: 13, label: "63" },
  { from: 10, to: 14, label: "20" },
  { from: 11, to: 12, label: "14" },
  { from: 11, to: 27, label: "43" },
  { from: 13, to: 17, label: "23" },
  { from: 15, to: 19, label: "23" },
  { from: 15, to: 23, label: "20" },
  { from: 16, to: 25, label: "34" },
  { from: 17, to: 20, label: "12" },
  { from: 18, to: 25, label: "57" },
  { from: 18, to: 31, label: "27" },
  { from: 18, to: 32, label: "84" },
  { from: 18, to: 33, label: "75" },
  { from: 18, to: 34, label: "62" },
  { from: 18, to: 39, label: "37" },
  { from: 18, to: 48, label: "216" },
  { from: 18, to: 49, label: "98" },
  { from: 19, to: 22, label: "11" },
  { from: 19, to: 23, label: "13" },
  { from: 19, to: 28, label: "18" },
  { from: 20, to: 21, label: "18" },
  { from: 21, to: 30, label: "9" },
  { from: 22, to: 26, label: "7" },
  { from: 22, to: 28, label: "25" },
  { from: 24, to: 29, label: "23" },
  { from: 24, to: 30, label: "16" },
  { from: 25, to: 31, label: "36" },
  { from: 25, to: 32, label: "91" },
  { from: 25, to: 33, label: "86" },
  { from: 25, to: 34, label: "73" },
  { from: 25, to: 39, label: "48" },
  { from: 25, to: 48, label: "227" },
  { from: 25, to: 49, label: "105" },
  { from: 26, to: 29, label: "7" },
  { from: 29, to: 30, label: "27" },
  { from: 31, to: 32, label: "59" },
  { from: 31, to: 33, label: "52" },
  { from: 31, to: 34, label: "39" },
  { from: 31, to: 39, label: "14" },
  { from: 31, to: 48, label: "193" },
  { from: 31, to: 49, label: "73" },
  { from: 32, to: 33, label: "109" },
  { from: 32, to: 34, label: "96" },
  { from: 32, to: 39, label: "71" },
  { from: 32, to: 42, label: "68" },
  { from: 32, to: 43, label: "78" },
  { from: 32, to: 48, label: "250" },
  { from: 32, to: 49, label: "100" },
  { from: 32, to: 52, label: "118" },
  { from: 33, to: 34, label: "27" },
  { from: 33, to: 39, label: "62" },
  { from: 33, to: 46, label: "55" },
  { from: 33, to: 48, label: "241" },
  { from: 33, to: 49, label: "123" },
  { from: 34, to: 39, label: "49" },
  { from: 34, to: 48, label: "228" },
  { from: 34, to: 49, label: "110" },
  { from: 35, to: 36, label: "20" },
  { from: 35, to: 38, label: "12" },
  { from: 36, to: 37, label: "7" },
  { from: 37, to: 45, label: "27" },
  { from: 38, to: 44, label: "25" },
  { from: 39, to: 48, label: "183" },
  { from: 39, to: 49, label: "85" },
  { from: 40, to: 41, label: "11" },
  { from: 41, to: 46, label: "150" },
  { from: 41, to: 47, label: "139" },
  { from: 41, to: 53, label: "108" },
  { from: 42, to: 43, label: "44" },
  { from: 42, to: 52, label: "84" },
  { from: 43, to: 45, label: "147" },
  { from: 43, to: 52, label: "58" },
  { from: 46, to: 47, label: "23" },
  { from: 46, to: 53, label: "52" },
  { from: 47, to: 53, label: "41" },
  { from: 48, to: 49, label: "264" },
  { from: 49, to: 51, label: "5" },
  { from: 50, to: 52, label: "27" },
]);

// create a network
var container = document.getElementById("mynetwork");
var data = {
  nodes: nodes,
  edges: edges
};
var options = {
  nodes: {
    shape: "box",

    font : {
        size: 50
    }
  },

  edges: {
    font : {
        size: 40
    },
    physics: true,
  },

  physics: {
    enabled: true,
    barnesHut: {
      gravitationalConstant: -2000,
      centralGravity: 0.3,
      springLength: 95,
      springConstant: 0.04,
      damping: 0.09,
      avoidOverlap: 0
    },
    forceAtlas2Based: {
      gravitationalConstant: -50,
      centralGravity: 0.01,
      springConstant: 0.08,
      springLength: 100,
      damping: 0.4,
      avoidOverlap: 0
    },
    repulsion: {
      centralGravity: 0.2,
      springLength: 200,
      springConstant: 0.05,
      nodeDistance: 100,
      damping: 0.09
    },
    hierarchicalRepulsion: {
      centralGravity: 0.0,
      springLength: 100,
      springConstant: 0.01,
      nodeDistance: 120,
      damping: 0.09,
      avoidOverlap: 0
    },
    maxVelocity: 50,
    minVelocity: 0.1,
    solver: 'forceAtlas2Based',
    stabilization: {
      enabled: true,
      iterations: 1000,
      updateInterval: 1,
      onlyDynamicEdges: false,
      fit: true
    },
    timestep: 0.5,
    adaptiveTimestep: true
  }
};
var network = new vis.Network(container, data, options);

